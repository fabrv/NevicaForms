{"version":3,"sources":["webpack:///./src/app/answer/answer.module.ts","webpack:///./src/app/answer/answer.page.html","webpack:///./src/app/answer/answer.page.scss","webpack:///./src/app/answer/answer.page.ts"],"names":[],"mappings":"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","file":"answer-answer-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AnswerPage } from './answer.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AnswerPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AnswerPage]\n})\nexport class AnswerPageModule {}\n","module.exports = \"<ion-header no-border>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{formId}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-slides #slides [options]=\\\"slideOpts\\\">\\n\\n    <ion-slide *ngFor=\\\"let item of form.QUESTIONS; let last = last\\\" id=\\\"slides\\\">\\n      <h2>{{item.QUESTION}}</h2>\\n      <ion-list inset id=\\\"input-list\\\">\\n        <ion-input [(ngModel)]=\\\"item.ANSWER\\\" *ngIf=\\\"item.TYPE == 2\\\" type=\\\"text\\\" value=\\\"\\\" placeholder=\\\"Respuesta\\\"></ion-input>\\n        <ion-input [(ngModel)]=\\\"item.ANSWER\\\" *ngIf=\\\"item.TYPE == 7\\\" type=\\\"number\\\" pattern=\\\"[0-9]*\\\" value=\\\"\\\" placeholder=\\\"Respuesta\\\"></ion-input>        \\n        <ion-input [(ngModel)]=\\\"item.ANSWER\\\" *ngIf=\\\"item.TYPE == 10\\\" type=\\\"email\\\" value=\\\"\\\" placeholder=\\\"Respuesta\\\"></ion-input>\\n        <ion-input [(ngModel)]=\\\"item.ANSWER\\\" *ngIf=\\\"item.TYPE == 11\\\" type=\\\"tel\\\" value=\\\"\\\" placeholder=\\\"Respuesta\\\"></ion-input>\\n      </ion-list>\\n      \\n      <p class=\\\"color-gray\\\" *ngIf=\\\"item.TYPE == 9\\\">Presionar en el boton para elegir color</p>\\n      <input [(ngModel)]=\\\"item.ANSWER\\\" *ngIf=\\\"item.TYPE == 9\\\" type=\\\"color\\\" class=\\\"input-color\\\">\\n\\n      <ion-list *ngIf=\\\"item.TYPE == 5\\\">\\n        <ion-radio-group [(ngModel)]=\\\"item.ANSWER\\\">\\n          <ion-item>\\n            <ion-label>Si</ion-label>\\n            <ion-radio value=\\\"1\\\"></ion-radio>\\n          </ion-item>\\n        \\n          <ion-item>\\n            <ion-label>No</ion-label>\\n            <ion-radio value=\\\"0\\\"></ion-radio>\\n          </ion-item>\\n        </ion-radio-group>\\n      </ion-list>\\n\\n      <ion-list *ngIf=\\\"item.TYPE == 1\\\">\\n        <ion-radio-group [(ngModel)]=\\\"item.ANSWER\\\">\\n          <ion-item *ngFor=\\\"let option of item.OPTIONS\\\">\\n            <ion-label>{{option.OPTION_CAPTION}}</ion-label>\\n            <ion-radio value=\\\"{{option.OPTION_VALUE}}\\\"></ion-radio>\\n          </ion-item>\\n        </ion-radio-group>\\n      </ion-list>\\n\\n      <ion-range [(ngModel)]=\\\"item.ANSWER\\\" *ngIf=\\\"item.TYPE == 6\\\"></ion-range>\\n      \\n      <ion-list inset class=\\\"datetime\\\" *ngIf=\\\"item.TYPE == 8\\\">\\n        <ion-item>\\n          <ion-label>Seleccionar fecha</ion-label>\\n          <ion-datetime [(ngModel)]=\\\"item.ANSWER\\\" displayFormat=\\\"DD/MM/YYYY\\\"></ion-datetime>\\n        </ion-item>\\n      </ion-list>\\n\\n      <input *ngIf=\\\"item.TYPE == 4\\\" [(ngModel)]=\\\"item.ANSWER\\\" type=\\\"file\\\" accept=\\\"image/*\\\" capture=\\\"camera\\\" />\\n\\n      <ion-button (click)=\\\"prevSlide()\\\" fill=\\\"clear\\\" shape=\\\"round\\\" size=\\\"large\\\">Anterior</ion-button>\\n      <ion-button (click)=\\\"nextSlide()\\\" *ngIf=\\\"last == false\\\" shape=\\\"round\\\" size=\\\"large\\\">Siguiente</ion-button>\\n      <br>\\n      <ion-button (click)=\\\"finishForm()\\\" *ngIf=\\\"last\\\" large shape=\\\"round\\\" size=\\\"large\\\">Finalizar</ion-button>\\n    </ion-slide>\\n    \\n  </ion-slides>\\n    \\n  <div class=\\\"progress\\\" [style.width]=\\\"(this.form.LAST_SLIDE/(this.form.QUESTIONS.length - 1))*100 + '%'\\\">    \\n    <div class=\\\"progress-shadow\\\"></div>\\n  </div>\\n</ion-content>\\n\"","module.exports = \"ion-input, .datetime {\\n  box-shadow: 0 1px 15px 1px rgba(0, 0, 0, 0.05);\\n  border-radius: 16px !important;\\n  padding-left: 10px !important; }\\n\\n#input-list {\\n  padding: 10px; }\\n\\n.datetime ion-datetime {\\n  box-shadow: none; }\\n\\n.input-color {\\n  width: 80%;\\n  margin: auto;\\n  margin-bottom: 20px;\\n  display: block;\\n  height: 40px;\\n  padding: 10px;\\n  border: none;\\n  box-shadow: 0 1px 15px 1px rgba(0, 0, 0, 0.05);\\n  border-radius: 16px;\\n  background-color: white; }\\n\\n.color-gray {\\n  color: rgba(0, 0, 0, 0.4); }\\n\\n.progress {\\n  position: fixed;\\n  bottom: 0;\\n  left: 0;\\n  height: 5px;\\n  width: 0;\\n  background-color: var(--ion-color-secondary); }\\n\\n.progress .progress-shadow {\\n    height: 5px;\\n    width: 5px;\\n    position: absolute;\\n    right: 10px;\\n    top: 10px;\\n    box-shadow: 0 0 50px 7px var(--ion-color-secondary);\\n    transition: width .3s; }\\n\\nion-slides {\\n  height: 100%; }\\n\\nion-slides ion-slide {\\n    height: 100%;\\n    display: block; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Slides, ToastController } from '@ionic/angular'\n\n@Component({\n  selector: 'app-answer',\n  templateUrl: './answer.page.html',\n  styleUrls: ['./answer.page.scss'],\n})\nexport class AnswerPage implements OnInit {\n  @ViewChild('slides') slides;\n  formId: string = '';\n  forms: any = [];\n  form: any = [];\n\n  slideOpts: any = {allowTouchMove: false};\n  private sub: any;\n\n  constructor(private route: ActivatedRoute, public toastCtrl: ToastController) { }\n\n  ngOnInit() {\n    this.forms = JSON.parse(localStorage.availableForms);\n    this.sub = this.route.params.subscribe(params => {\n        this.formId = params['formId']; // (+) converts string 'id' to a number\n    });\n    this.sub.unsubscribe();\n\n    for (let x = 0; x < this.forms.length; x++){\n      if (this.forms[x].FORM_NAME == this.formId){\n        this.form = this.forms[x];\n      }\n    }\n    console.log(this.form.LAST_SLIDE);\n    this.slideOpts = {allowTouchMove: false, initialSlide: this.form.LAST_SLIDE}\n  }\n\n  nextSlide(){\n    this.slides.nativeElement.slideNext(200);    \n\n    this.saveIndex();\n  }\n\n\n  prevSlide(){        \n    this.slides.nativeElement.slidePrev(200);    \n\n    this.saveIndex();\n  }\n\n  saveIndex(){\n    //Change lastSlide ID\n    //300 ms of timeoute to account for the slides movement.\n    setTimeout(()=>{\n      this.form.LAST_SLIDE = this.slides.nativeElement.getActiveIndex();\n      localStorage.availableForms = JSON.stringify(this.forms);\n    },300);\n  }\n\n\n  finishForm(){\n    //Get current date and format it in YYYY-MM-DD HH:mm:SS\n    let currentdate = new Date(); \n    let datetime:string = currentdate.getFullYear() + '-'\n                    + (currentdate.getMonth()+1)  + '-'\n                    + currentdate.getDate() + ' '\n                    + currentdate.getHours() + ':'\n                    + currentdate.getMinutes() + ':'\n                    + currentdate.getSeconds()\n\n    this.form.FINISHED_DATE = datetime;\n\n\n    this.form.LAST_SLIDE = 0;\n    this.slides.nativeElement.slideTo(0,200);\n\n    this.form.FILLED_NO += 1;\n\n    if (localStorage.finishedForms) {      \n      let finishedForms:any = [];\n      finishedForms = JSON.parse(localStorage.finishedForms);\n      finishedForms.push(this.form);\n      \n      localStorage.finishedForms = JSON.stringify(finishedForms);\n    }else{\n      localStorage.finishedForms = JSON.stringify([this.form]);\n    }\n    \n    for (let i = 0; i < this.form.QUESTIONS.length; i ++){        \n      this.form.QUESTIONS[i].ANSWER = ''\n    }\n    localStorage.availableForms = JSON.stringify(this.forms);\n    //this.storageSave.updateFinishedForms();\n\n    this.presentToast('Formulario finalizado y guardado.')\n  }\n\n  //Default ionic toast\n  async presentToast(message) {\n    const toast = await this.toastCtrl.create({\n      message: message,\n      duration: 3000\n    });\n    toast.present();\n  }\n\n}\n"],"sourceRoot":""}