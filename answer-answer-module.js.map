{"version":3,"sources":["webpack:///./src/app/answer/answer.module.ts","webpack:///./src/app/answer/answer.page.html","webpack:///./src/app/answer/answer.page.scss","webpack:///./src/app/answer/answer.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEF;AAE3C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uDAAU;KACtB;CACF,CAAC;AAWF;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAT5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,uDAAU,CAAC;SAC3B,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB7B,6KAA6K,QAAQ,6IAA6I,iCAAiC,eAAe,47CAA47C,uBAAuB,+CAA+C,qBAAqB,sjC;;;;;;;;;;;ACAz4D,wCAAwC,mDAAmD,mCAAmC,kCAAkC,EAAE,iBAAiB,kBAAkB,EAAE,4BAA4B,qBAAqB,EAAE,kBAAkB,eAAe,iBAAiB,wBAAwB,mBAAmB,iBAAiB,kBAAkB,iBAAiB,mDAAmD,wBAAwB,4BAA4B,EAAE,iBAAiB,8BAA8B,EAAE,eAAe,oBAAoB,cAAc,YAAY,gBAAgB,aAAa,iDAAiD,EAAE,gCAAgC,kBAAkB,iBAAiB,yBAAyB,kBAAkB,gBAAgB,0DAA0D,4BAA4B,EAAE,gBAAgB,iBAAiB,EAAE,0BAA0B,mBAAmB,qBAAqB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;ACA77B;AACD;AAOjD;IAME,oBAAoB,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;QALzC,WAAM,GAAW,EAAE,CAAC;QACpB,UAAK,GAAQ,EAAE,CAAC;QAChB,SAAI,GAAQ,EAAE,CAAC;IAG8B,CAAC;IAE9C,6BAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QACrD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YACzC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,uCAAuC;QAC3E,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAEvB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;YAC1C,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,EAAC;gBAC1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC5B,CAAC;QACH,CAAC;IACH,CAAC;IApBU,UAAU;QALtB,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAO2B,8DAAc;OAN9B,UAAU,CAsBtB;IAAD,iBAAC;CAAA;AAtBsB","file":"answer-answer-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AnswerPage } from './answer.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AnswerPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AnswerPage]\n})\nexport class AnswerPageModule {}\n","module.exports = \"<ion-header no-border>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{formId}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-slides>\\n\\n    <ion-slide *ngFor=\\\"let item of form.QUESTIONS; let last = last\\\">\\n      <h2>{{item.QUESTION}}</h2>\\n      <ion-list inset id=\\\"input-list\\\">\\n        <ion-input [(ngModel)]=\\\"item.ANSWER\\\" *ngIf=\\\"item.TYPE == 2\\\" type=\\\"text\\\" value=\\\"\\\" placeholder=\\\"Respuesta\\\"></ion-input>\\n        <ion-input [(ngModel)]=\\\"item.ANSWER\\\" *ngIf=\\\"item.TYPE == 7\\\" type=\\\"number\\\" pattern=\\\"[0-9]*\\\" value=\\\"\\\" placeholder=\\\"Respuesta\\\"></ion-input>        \\n        <ion-input [(ngModel)]=\\\"item.ANSWER\\\" *ngIf=\\\"item.TYPE == 10\\\" type=\\\"email\\\" value=\\\"\\\" placeholder=\\\"Respuesta\\\"></ion-input>\\n        <ion-input [(ngModel)]=\\\"item.ANSWER\\\" *ngIf=\\\"item.TYPE == 11\\\" type=\\\"tel\\\" value=\\\"\\\" placeholder=\\\"Respuesta\\\"></ion-input>\\n      </ion-list>\\n      \\n      <p class=\\\"color-gray\\\" *ngIf=\\\"item.TYPE == 9\\\">Presionar en el boton para elegir color</p>\\n      <input [(ngModel)]=\\\"item.ANSWER\\\" *ngIf=\\\"item.TYPE == 9\\\" type=\\\"color\\\" class=\\\"input-color\\\">\\n\\n      <ion-list *ngIf=\\\"item.TYPE == 5\\\">\\n        <ion-radio-group [(ngModel)]=\\\"item.ANSWER\\\">\\n          <ion-item>\\n            <ion-label>Si</ion-label>\\n            <ion-radio value=\\\"1\\\"></ion-radio>\\n          </ion-item>\\n        \\n          <ion-item>\\n            <ion-label>No</ion-label>\\n            <ion-radio value=\\\"0\\\"></ion-radio>\\n          </ion-item>\\n        </ion-radio-group>\\n      </ion-list>\\n\\n      <ion-list *ngIf=\\\"item.TYPE == 1\\\">\\n        <ion-radio-group [(ngModel)]=\\\"item.ANSWER\\\">\\n          <ion-item *ngFor=\\\"let option of item.OPTIONS\\\">\\n            <ion-label>{{option.OPTION_CAPTION}}</ion-label>\\n            <ion-radio value=\\\"{{option.OPTION_VALUE}}\\\"></ion-radio>\\n          </ion-item>\\n        </ion-radio-group>\\n      </ion-list>\\n\\n      <ion-range [(ngModel)]=\\\"item.ANSWER\\\" *ngIf=\\\"item.TYPE == 6\\\"></ion-range>\\n      \\n      <ion-list inset class=\\\"datetime\\\" *ngIf=\\\"item.TYPE == 8\\\">\\n        <ion-item>\\n          <ion-label>Seleccionar fecha</ion-label>\\n          <ion-datetime [(ngModel)]=\\\"item.ANSWER\\\" displayFormat=\\\"DD/MM/YYYY\\\"></ion-datetime>\\n        </ion-item>\\n      </ion-list>\\n\\n      <input *ngIf=\\\"item.TYPE == 4\\\" [(ngModel)]=\\\"item.ANSWER\\\" type=\\\"file\\\" accept=\\\"image/*\\\" capture=\\\"camera\\\" />\\n\\n      <ion-button (click)=\\\"prevSlide()\\\"clear>Anterior</ion-button>\\n      <ion-button (click)=\\\"nextSlide()\\\" *ngIf=\\\"last == false\\\">Siguiente</ion-button>\\n      <br>\\n      <ion-button (click)=\\\"finishForm()\\\" *ngIf=\\\"last\\\" large>Finalizar</ion-button>\\n    </ion-slide>\\n    \\n  </ion-slides>\\n    \\n  <div class=\\\"progress\\\" [style.width]=\\\"(this.form.LAST_SLIDE/(this.form.QUESTIONS.length - 1))*100 + '%'\\\">    \\n    <div class=\\\"progress-shadow\\\"></div>\\n  </div>\\n</ion-content>\\n\"","module.exports = \"ion-input, .datetime {\\n  box-shadow: 0 1px 15px 1px rgba(0, 0, 0, 0.05);\\n  border-radius: 16px !important;\\n  padding-left: 10px !important; }\\n\\n#input-list {\\n  padding: 10px; }\\n\\n.datetime ion-datetime {\\n  box-shadow: none; }\\n\\n.input-color {\\n  width: 80%;\\n  margin: auto;\\n  margin-bottom: 20px;\\n  display: block;\\n  height: 40px;\\n  padding: 10px;\\n  border: none;\\n  box-shadow: 0 1px 15px 1px rgba(0, 0, 0, 0.05);\\n  border-radius: 16px;\\n  background-color: white; }\\n\\n.color-gray {\\n  color: rgba(0, 0, 0, 0.4); }\\n\\n.progress {\\n  position: fixed;\\n  bottom: 0;\\n  left: 0;\\n  height: 5px;\\n  width: 0;\\n  background-color: var(--ion-color-secondary); }\\n\\n.progress .progress-shadow {\\n    height: 5px;\\n    width: 5px;\\n    position: absolute;\\n    right: 10px;\\n    top: 10px;\\n    box-shadow: 0 0 50px 7px var(--ion-color-secondary);\\n    transition: width .3s; }\\n\\nion-slides {\\n  height: 100%; }\\n\\nion-slides ion-slide {\\n    height: 100%;\\n    display: block; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-answer',\n  templateUrl: './answer.page.html',\n  styleUrls: ['./answer.page.scss'],\n})\nexport class AnswerPage implements OnInit {\n  formId: string = '';\n  forms: any = [];\n  form: any = [];\n  private sub: any;\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.forms = JSON.parse(localStorage.availableForms);\n    this.sub = this.route.params.subscribe(params => {\n        this.formId = params['formId']; // (+) converts string 'id' to a number\n    });\n    this.sub.unsubscribe();\n\n    for (let x = 0; x < this.forms.length; x++){\n      if (this.forms[x].FORM_NAME == this.formId){\n        this.form = this.forms[x];\n      }\n    }\n  }\n\n}\n"],"sourceRoot":""}